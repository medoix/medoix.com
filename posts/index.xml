<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Posts on medoix</title><link>https://medoix.com/posts/</link><description>Recent content in Posts on medoix</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><copyright>This work is licensed under a Creative Commons Attribution-NonCommercial 4.0 International License.</copyright><lastBuildDate>Sat, 17 Apr 2021 15:46:43 +0000</lastBuildDate><atom:link href="https://medoix.com/posts/index.xml" rel="self" type="application/rss+xml"/><item><title>Increase Terminal Size Font of 4k Device</title><link>https://medoix.com/posts/2021/04/increase-terminal-size-font-of-4k-device/</link><pubDate>Sat, 17 Apr 2021 15:46:43 +0000</pubDate><guid>https://medoix.com/posts/2021/04/increase-terminal-size-font-of-4k-device/</guid><description>When booting a new Linux install on a 4k HiDPI screen the terminal font size becomes so small that it is near impossible to read.
In order to increase the font size i found this neat little setting that does just that, now you can read your terminal before you startx.
Edit /etc/vconsole.conf and add/replace with the following to get larger font on the next boot.
FONT=latarcyrheb-sun32</description><content type="html"><![CDATA[<p>When booting a new Linux install on a 4k HiDPI screen the terminal font size becomes so small that it is near impossible to read.</p>
<p>In order to increase the font size i found this neat little setting that does just that, now you can read your terminal before you <code>startx</code>.</p>
<p>Edit <code>/etc/vconsole.conf</code> and add/replace with the following to get larger font on the next boot.</p>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-bash" data-lang="bash">FONT<span style="color:#f92672">=</span>latarcyrheb-sun32
</code></pre></div>]]></content></item><item><title>Fix Windows Subsystem for Linux (WSL) File Permissions</title><link>https://medoix.com/posts/2021/01/fix-windows-subsystem-for-linux-wsl-file-permissions/</link><pubDate>Tue, 05 Jan 2021 11:55:02 +0000</pubDate><guid>https://medoix.com/posts/2021/01/fix-windows-subsystem-for-linux-wsl-file-permissions/</guid><description>Windows 10 and WSL (windows Subsystem Linux) is very useful when wanting to run linux type tasks on your Windows 10 machine instead of booting up a dedicated Linux Virtual Machine for example. One downside is that Windows 10 WSL does a terrible job at emulating Linux permissions when it mounts the directories stored locally on the Windows filesystem.
There are two fixes we can do here to make this much nicer&amp;hellip;</description><content type="html"><![CDATA[<p>Windows 10 and WSL (windows Subsystem Linux) is very useful when wanting to run linux type tasks on your Windows 10 machine instead of booting up a dedicated Linux Virtual Machine for example. One downside is that Windows 10 WSL does a terrible job at emulating Linux permissions when it mounts the directories stored locally on the Windows filesystem.</p>
<p>There are two fixes we can do here to make this much nicer&hellip;</p>
<h1 id="fix-wsl-mount-permissions">Fix WSL Mount Permissions</h1>
<h2 id="what-it-does">What it does?</h2>
<p>You can read the “official” Microsoft documentation on their Dev Blog but here is my explanation line-by-line:</p>
<pre><code>The automount section changes the settings for drives that are automounted under /mnt
The enabled key is probably unnecessary but it explicitly turns on automounting (default is true)
The options key is a bit more interesting:
metadata turns on a mostly parallel of file permission metadata that allows WSL file permissions changes to be persisted. It partially affects the underlying Windows permissions; for more details see the Dev Blog link above.
umask value masks out (i.e. unsets) the group and others write bit for both files and directories
fmask value masks out the group and others execute bit for just files
</code></pre>
<p>Files should now show up with a comfortable permission setting of 0644 and directories with 0755 if they’re mounted under /mnt.</p>
<h2 id="the-fix">The Fix</h2>
<p>Add this section to your WSL instance’s /etc/wsl.conf (the file probably does not exist, just create it):</p>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-bash" data-lang="bash"><span style="color:#f92672">[</span>automount<span style="color:#f92672">]</span>
enabled <span style="color:#f92672">=</span> true
options <span style="color:#f92672">=</span> <span style="color:#e6db74">&#34;metadata,umask=22,fmask=11&#34;</span>
</code></pre></div><h1 id="fix-default-permissions">Fix Default Permissions</h1>
<p>Newly created files and directories in the “real” Linux directory structure also get a bad set of default permissions: 0666 for files and 0777 for directories. This is controlled by the umask value which defaults to 0000 in WSL. There is a decently long bug report about this issue but the fix is easy enough. Add to your ~/.profile:</p>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-bash" data-lang="bash"><span style="color:#75715e"># Note: Bash on Windows does not currently apply umask properly.</span>
<span style="color:#66d9ef">if</span> <span style="color:#f92672">[[</span> <span style="color:#e6db74">&#34;</span><span style="color:#66d9ef">$(</span>umask<span style="color:#66d9ef">)</span><span style="color:#e6db74">&#34;</span> <span style="color:#f92672">=</span> <span style="color:#e6db74">&#34;0000&#34;</span> <span style="color:#f92672">]]</span>; <span style="color:#66d9ef">then</span>
  umask <span style="color:#ae81ff">0022</span>
<span style="color:#66d9ef">fi</span>
</code></pre></div><p>Similar to the umask setting that we used in our /etc/wsl.conf the value of 0022 masks out the group and others write bit for both files and directories.</p>
]]></content></item><item><title>Docker Everything List</title><link>https://medoix.com/posts/2019/11/docker-everything-list/</link><pubDate>Wed, 13 Nov 2019 09:16:46 +0000</pubDate><guid>https://medoix.com/posts/2019/11/docker-everything-list/</guid><description>Docker Everything All of the projects i work on these i automatically create a Dockerfile to build a reliable and reusable image i can run locally to test or deploy to a prod kube cluster or docker host to run permanenetly and this got me thinking&amp;hellip; can i run my day to day tools and systems in Docker?
The answer is almost always yes! Therfore below is my list of tools and services i use daily/randomly That’s are one liners to get going in a container.</description><content type="html"><![CDATA[<h1 id="docker-everything">Docker Everything</h1>
<p>All of the projects i work on these i automatically create a Dockerfile to build a reliable and reusable image i can run locally to test or deploy to a prod kube cluster or docker host to run permanenetly and this got me thinking&hellip; can i run my day to day tools and systems in Docker?</p>
<p>The answer is almost always yes! Therfore below is my list of tools and services i use daily/randomly That’s  are one liners to get going in a container.</p>
<p>If you know of some handy tools/services not listed here let me know!</p>
<h2 id="security">Security</h2>
<h3 id="kali-environmenthttpsgitlabcommedoixkali-linux-docker"><a href="https://gitlab.com/medoix/kali-linux-docker">Kali Environment</a></h3>
<p>All Tools Installed</p>
<pre><code>docker run -t -i registry.gitlab.com/medoix/kali-linux-docker:latest /bin/bash
</code></pre><p>No Tools Installed</p>
<pre><code>docker run -t -i kalilinux/kali-linux-docker /bin/bash
</code></pre><h3 id="reconnoitrehttpsgithubcomcodingoreconnoitre"><a href="https://github.com/codingo/Reconnoitre">Reconnoitre</a></h3>
<p>Build</p>
<pre><code>git clone https://github.com/codingo/Reconnoitre.git
cd Reconnoitre
docker build -t reconnoitre .
</code></pre><p>For Help</p>
<pre><code>docker run reconnoitre run --rm -h
</code></pre><p>Full Scan Example</p>
<pre><code>docker run reconnoitre run --rm -v /local/output/path:/outputdir -t 192.168.1.1-252 -o /outputdir --pingsweep --dns --snmp --services --hostnames --virtualhosts
</code></pre><h3 id="cspparsehttpsgithubcomvortexaucspparse"><a href="https://github.com/vortexau/cspparse">cspparse</a></h3>
<p>Build</p>
<pre><code>git clone https://github.com/lc/cspparse
cd cspparse
docker build -t cspparse .
</code></pre><p>Scan Domain</p>
<pre><code>docker run cspparse --rm &lt;full domain to scan including protocol&gt;
</code></pre><h2 id="databases">Databases</h2>
<h3 id="mongodbhttpshubdockercom_mongo"><a href="https://hub.docker.com/_/mongo/">MongoDB</a></h3>
<pre><code>docker run -d -p 27017-27019:27017-27019 --name mongodb mongo:latest
</code></pre><h3 id="mysqlhttpshubdockercom_mysql"><a href="https://hub.docker.com/_/mysql/">MySQL</a></h3>
<pre><code>docker run -d -p 3306:3306 --name=mysql1 -d mysql/mysql-server:latest
    docker logs mysql1
    docker logs mysql1 2&gt;&amp;1 | grep GENERATED
    docker exec -it mysql1 mysql -uroot -p
    ALTER USER 'root'@'localhost' IDENTIFIED BY 'password';
</code></pre><h2 id="misc">Misc</h2>
<h3 id="genacthttpsgithubcomsvenstarogenact---want-to-look-busy"><a href="https://github.com/svenstaro/genact">Genact</a> - Want to look busy?</h3>
<pre><code>For Help
docker run -it --rm svenstaro/genact -h

Weblog Tail Module
docker run -it --rm svenstaro/genact -m weblog
</code></pre>]]></content></item><item><title>Linux Desktop Showing Content of Home Directory</title><link>https://medoix.com/posts/2019/01/linux-desktop-showing-content-of-home-directory/</link><pubDate>Sat, 26 Jan 2019 08:22:24 +0000</pubDate><guid>https://medoix.com/posts/2019/01/linux-desktop-showing-content-of-home-directory/</guid><description>Ever had that awkward moment where you login to your Linux desktop and there are a LOT of files on the desktop that you are not sure about (even DOT files).
This usually means something has gone haywire with your configuration and the desktop is now set to a different folder (different than the default /home/user/Desktop folder).
This happened to me and i believe it was because i deleted my Desktop folder (don&amp;rsquo;t ask) and it seems that XDG just took it upon itself to set its new location to my home (~/) directory and therefore i was seeing dot files and all the different folders associated.</description><content type="html"><![CDATA[<p>Ever had that awkward moment where you login to your Linux desktop and there are a LOT of files on the desktop that you are not sure about (even DOT files).</p>
<p>This usually means something has gone haywire with your configuration and the desktop is now set to a different folder (different than the default /home/user/Desktop folder).</p>
<p>This happened to me and i believe it was because i deleted my Desktop folder (don&rsquo;t ask) and it seems that XDG just took it upon itself to set its new location to my home (~/) directory and therefore i was seeing dot files and all the different folders associated.</p>
<p>To fix this you need to open up the user-dirs.conf and adjust the location for Desktop.</p>
<pre><code>sudo nano ~/.config/user-dirs.dirs
</code></pre><p>Look for the line titled <strong>XDG_DESKTOP_DIR</strong> and adjust accordingly.</p>
<pre><code>Broken
XDG_DESKTOP_DIR=&quot;$HOME&quot;

Fixed
XDG_DESKTOP_DIR=&quot;$HOME/Desktop&quot;
</code></pre><p>You may need to logout and back in again for the change to take effect but this will now be fixed.</p>
]]></content></item><item><title>Prevent VirtualBox Guest Syncing Time with Host</title><link>https://medoix.com/posts/2019/01/prevent-virtualbox-guest-syncing-time-with-host/</link><pubDate>Sat, 26 Jan 2019 07:58:53 +0000</pubDate><guid>https://medoix.com/posts/2019/01/prevent-virtualbox-guest-syncing-time-with-host/</guid><description>Recently i was creating a few different guest machines inside my VirtualBox host (Windows) and noticed an odd theme of APT not being able to update due to the resources obtained being from the future! (i am a time traveler). This usually screams out one thing.
Check the system time!
Upon checking my guest machines time it was in fact days behind where it should be, this meant that even with the VirtualBox guest tools installed AND the &amp;ldquo;Hardware clock in UTC&amp;rdquo; option selected under Motherboard, the guest was still not getting the right time.</description><content type="html"><![CDATA[<p>Recently i was creating a few different guest machines inside my VirtualBox host (Windows) and noticed an odd theme of APT not being able to update due to the resources obtained being from the future! (i am a time traveler). This usually screams out one thing.</p>
<p><strong>Check the system time!</strong></p>
<p>Upon checking my guest machines time it was in fact days behind where it should be, this meant that even with the VirtualBox guest tools installed AND the &ldquo;Hardware clock in UTC&rdquo; option selected under Motherboard, the guest was still not getting the right time.</p>
<p>This also meant that the local ntp daemon was not syncing externally as it was purely relying on the host sync to be correct.</p>
<p>Luckily the the Virtualbox user manual, of all things, does contain a solution under the Disabling the Guest Additions time synchronization heading:</p>
<p>Once installed and started, the VirtualBox Guest Additions will try to synchronize the guest time with the host time. This can be prevented by forbidding the guest service from reading the host clock:</p>
<pre><code>VBoxManage setextradata &quot;VM name&quot; &quot;VBoxInternal/Devices/VMMDev/0/Config/GetHostTimeDisabled&quot; 1
</code></pre><p>To run the above command open CMD.exe as Administrator.</p>
<p>Navigate to the VirtualBox folder on your machine</p>
<pre><code>cd C:\Program Files\Oracle\VirtualBox
</code></pre><p>Then enter the command as seen above (replacing VM name with the name of the virtual machine you wish to effect).</p>
<p>The guest will now not sync with the host and should have the right time/date set by the NTP daemon (as long as you have the right Region/Location set in Settings).</p>
]]></content></item><item><title>Mac OSX Sudo With Fingerprint</title><link>https://medoix.com/posts/2017/11/mac-osx-sudo-with-fingerprint/</link><pubDate>Mon, 27 Nov 2017 12:14:58 +0000</pubDate><guid>https://medoix.com/posts/2017/11/mac-osx-sudo-with-fingerprint/</guid><description>Have a shiny new Macbook Pro with touch bar? Sick and tired of typing your local password each time you wanrt to sudo anythiong within the terminal?
Well boy do i have an awesome solution for you!
Open up terminal and edit the following file (this will be the last time you need to enter your password for sudo)
sudo nano /etc/pam.d/sudo Add the following at the top of the file</description><content type="html"><![CDATA[<p>Have a shiny new Macbook Pro with touch bar?
Sick and tired of typing your local password each time you wanrt to sudo anythiong within the terminal?</p>
<p>Well boy do i have an awesome solution for you!</p>
<p>Open up terminal and edit the following file (this will be the last time you need to enter your password for sudo)</p>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-bash" data-lang="bash">sudo nano /etc/pam.d/sudo
</code></pre></div><p>Add the following at the top of the file</p>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-bash" data-lang="bash">auth       sufficient     pam_tid.so
</code></pre></div><p>Save and close the file and restart the terminal.</p>
<p>Now whenever you SUDO anything you will be prompted to use your fingerprint!</p>
]]></content></item><item><title>Disable Bonjour in Cyberduck</title><link>https://medoix.com/posts/2015/08/disable-bonjour-in-cyberduck/</link><pubDate>Thu, 06 Aug 2015 12:32:01 +0000</pubDate><guid>https://medoix.com/posts/2015/08/disable-bonjour-in-cyberduck/</guid><description>I used Cyberduck on Mac OS X for quite a lot of tasks including talking to S3 buckets or even SFTP&amp;rsquo;ing into my Linux servers.
Every time I load up Cyberduck, I get flooded with Bonjour Growl notifications. Since I never use Bonjour with Cyberduck, I figured it’s acceptable to disable it. It’s a simple Terminal command, like so many other things are in the Mac world. To disable Bonjour, fire up Terminal and execute this command:</description><content type="html"><![CDATA[<p>I used Cyberduck on Mac OS X for quite a lot of tasks including talking to S3 buckets or even SFTP&rsquo;ing into my Linux servers.</p>
<p>Every time I load up Cyberduck, I get flooded with Bonjour Growl notifications. Since I never use Bonjour with Cyberduck, I figured it’s acceptable to disable it. It’s a simple Terminal command, like so many other things are in the Mac world. To disable Bonjour, fire up Terminal and execute this command:</p>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-bash" data-lang="bash">defaults write ch.sudo.cyberduck rendezvous.enable false
</code></pre></div><p>If you want to re-enable Bonjour, do the same command but change false to true.</p>
]]></content></item><item><title>Turnigy 9x 'Resistor Fix' Trainer Port</title><link>https://medoix.com/posts/2015/07/turnigy-9x-resistor-fix-trainer-port/</link><pubDate>Sat, 25 Jul 2015 18:40:17 +0000</pubDate><guid>https://medoix.com/posts/2015/07/turnigy-9x-resistor-fix-trainer-port/</guid><description>The &amp;lsquo;resistor fix&amp;rsquo; solves the problem of needing to unplug the wireless module in order to use the trainer port.
It involves cutting a trace on a PCB inside the transmitter, and soldering a resistor (usually a 1kOhm resistor) in series by bridging the cut trace.
Why do you need to unplug the wireless module in the first place?
A Little More Theory The trainer port on the 9X contains a switch (that triggers when a plug is inserted into the trainer jack) that powers off the wireless module to ensure the 9X no longer transmits its signal.</description><content type="html"><![CDATA[<p>The &lsquo;resistor fix&rsquo; solves the problem of needing to unplug the wireless module in order to use the trainer port.</p>
<p><img src="IMG_5466.jpg" alt=""></p>
<p>It involves cutting a trace on a PCB inside the transmitter, and soldering a resistor (usually a 1kOhm resistor) in series by bridging the cut trace.</p>
<p>Why do you need to unplug the wireless module in the first place?</p>
<h2 id="a-little-more-theory">A Little More Theory</h2>
<p>The trainer port on the 9X contains a switch (that triggers when a plug is inserted into the trainer jack) that powers off the wireless module to ensure the 9X no longer transmits its signal. Normally, when wireless module is powered on, the radio sends a data signal to the wireless module that is between 0V and +3.3V.</p>
<p>Unfortunately, when the 2.4GHz wireless module loses power, the data signal coming from the radio processor is essentially shorted to ground through a high voltage protection diode on the signal pin of the wireless module. The data signal that goes to the wireless module happens to be the same signal routed to the trainer port. Adding a resistor in series with the signal going to the wireless module breaks the short to ground and allows the full voltage signal to reach the trainer port.</p>
<p>Notice, the short to ground only occurs when the 2.4GHz module loses power. When the wireless module receives power, the data signal behaves like a proper input and maintains high impedance, probably in the 10kOhm and above range. By selecting a resistor much lower in resistance than the input impedance of the wireless module, say 1k, the resistance added by the fix is negligible and does not affect normal operation of the radio.</p>
<h2 id="the-actual-fix">The Actual Fix</h2>
<p><strong>Items needed</strong></p>
<ul>
<li>Philips Screw Driver</li>
<li>Xact-O Knife or sharp blade</li>
<li>Resistor with value around 1k Ohm</li>
<li>Soldering iron</li>
</ul>
<p><strong>Steps</strong></p>
<p>1. Start by taking off the back of the 9X by removing the 6 screws on the back
2. Carefully open radio. Manipulating the sides should allow you to be able to lay both sides flat without disconnecting any cables.</p>
<p><img src="9x_cracked_open.jpg" alt="9x Cracked Open" title="9x Cracked Open"></p>
<p>3. Locate the trace for the data signal (top pin and outer trace on left).</p>
<p><img src="9x_resistor_in_place.jpg" alt="9x Resistor in Place" title="9x Resistor in Place"><!-- raw HTML omitted --></p>
<p>4. Using the Xact-O knife, cut a small notch in trace and scrape the solder mask (green enamel) off of the trace far enough apart so the resistor bridges the notch and both leads lay on bare copper (picture 1 below) or cover a resistor in heat shrink and solder each end to the corresponding pins (picture 2 below).</p>
<p><img src="9x_with_xacto.jpg" alt="9x Cut Trace" title="9x Cut Trace"></p>
<p><img src="resistor-heatshrinked.png" alt="9x Resistor Heatshrinked" title="9x Resistor Heatshrinked"></p>
<p>Solder both sides of the resistor down to either side of the trace where the solder mask has been scraped off.</p>
<p>5. Carefully close the radio, redoing the screws in the back.
6. Enjoy not having to unplug the wireless module to use your radio with a sim or trainer!</p>
]]></content></item><item><title>PBCopy From SSH to Local OSX</title><link>https://medoix.com/posts/2014/11/pbcopy-from-ssh-to-local-osx/</link><pubDate>Thu, 27 Nov 2014 11:43:14 +0000</pubDate><guid>https://medoix.com/posts/2014/11/pbcopy-from-ssh-to-local-osx/</guid><description>I have been wondering for a long time how i could copy large config files or any file for that matter from nano/vi inside an SSH session to my local clipboard (OSX). As you can imagine copying one section at a time from your favourite text editor has long been a pain in the rear end.
The trick uses netcat (nc) to pipe text over an SSH connection to a local listener that passes it to pbcopy.</description><content type="html"><![CDATA[<p>I have been wondering for a long time how i could copy large config files or any file for that matter from nano/vi inside an SSH session to my local clipboard (OSX). As you can imagine copying one section at a time from your favourite text editor has long been a pain in the rear end.</p>
<p>The trick uses netcat (nc) to pipe text over an SSH connection to a local listener that passes it to pbcopy. The below should work on both Linux/Unix servers as well as OS X servers.</p>
<h1 id="local-machine-configuration">Local Machine Configuration</h1>
<p>The quickest way to &ldquo;networkify&rdquo; pbcopy is to run the following snippet in a dedicated terminal tab:</p>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-bash" data-lang="bash"><span style="color:#66d9ef">while</span> <span style="color:#f92672">(</span>true<span style="color:#f92672">)</span>; <span style="color:#66d9ef">do</span> nc -l <span style="color:#ae81ff">2224</span> | pbcopy; <span style="color:#66d9ef">done</span>
</code></pre></div><p>We just asked bash to launch netcat (nc), repeatedly wait for incoming connections on localhost:2224, and pipe any data received into pbcopy.</p>
<p>Now locally, the following two are equivalent:</p>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-bash" data-lang="bash">echo <span style="color:#e6db74">&#34;This text gets sent to clipboard&#34;</span> | pbcopy
</code></pre></div><div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-bash" data-lang="bash">echo <span style="color:#e6db74">&#34;This text gets sent to clipboard&#34;</span> | nc localhost <span style="color:#ae81ff">2224</span>
</code></pre></div><p>Exposing our daemon to machines we SSH to.</p>
<p>For security reasons, our &ldquo;pbcopy daemon&rdquo; only allows connections from localhost. But the goal is to allow you to pipe text to your local clipboard from a server you&rsquo;ve SSHd into. This is done via SSH&rsquo;s reverse tunnel forwarding feature:</p>
<p>SSH in to remote-server as usual, except -R asks that remote&rsquo;s port 2224 is forwarded to your laptop&rsquo;s localhost:2224</p>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-bash" data-lang="bash">ssh user@remote-server.com -R 2224:localhost:2224
</code></pre></div><p>If you&rsquo;d prefer to enable reverse tunneling of port 2224 all your future outgoing SSH connections, the following adds the appropriate line to ~/.ssh/config:</p>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-bash" data-lang="bash">echo <span style="color:#e6db74">&#34;RemoteForward 2224 localhost:2224&#34;</span> &amp;gt;&amp;gt; ~/.ssh/config
</code></pre></div><p>Having established the SSH reverse tunnel, you can now do the following from the remote server:</p>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-bash" data-lang="bash">cat large-file.txt | nc -q0 localhost <span style="color:#ae81ff">2224</span>
</code></pre></div><p><strong>-q0</strong> is required for GNU&rsquo;s version of netcat to exit on eof; the osx version does it by default
If the remote server is missing nc, either run sudo apt-get install netcat -y or use telnet instead:</p>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-bash" data-lang="bash">cat large-file.txt | telnet localhost <span style="color:#ae81ff">2224</span>
</code></pre></div><p>Enjoy your newly-supercharged clipboard!</p>
<h3 id="getting-fancier">Getting Fancier</h3>
<p>If your laptop is running linux, replacing pbcopy with xcopy should work:</p>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-bash" data-lang="bash"><span style="color:#66d9ef">while</span> <span style="color:#f92672">(</span>true<span style="color:#f92672">)</span>; <span style="color:#66d9ef">do</span> nc -l <span style="color:#ae81ff">2224</span> | xcopy; <span style="color:#66d9ef">done</span>
</code></pre></div><p>For a more verbose version of our &ldquo;pbcopy daemon&rdquo; that prints what&rsquo;s being sent to the clipboard, try this:</p>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-bash" data-lang="bash"><span style="color:#66d9ef">while</span> <span style="color:#f92672">(</span>true<span style="color:#f92672">)</span>; <span style="color:#66d9ef">do</span> echo <span style="color:#e6db74">&#34;Waiting...&#34;</span> ; nc -l <span style="color:#ae81ff">2224</span> | pbcopy; echo <span style="color:#e6db74">&#34;Copied: &#34;</span>; pbpaste | sed <span style="color:#e6db74">&#39;s/^/ /&#39;</span>; <span style="color:#66d9ef">done</span>
</code></pre></div><p>To automatically start the &ldquo;pbcopy daemon&rdquo; on boot, you should use launchd.</p>
<h1 id="remote-machineserver-configuration">Remote Machine/Server Configuration</h1>
<p>When it comes time to create the shell script on the remote machine, create one called /usr/local/bin/rpbcopy with the contents below:</p>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-bash" data-lang="bash"><span style="color:#75715e">#!/bin/bash
</span><span style="color:#75715e"></span>
unamestr<span style="color:#f92672">=</span><span style="color:#e6db74">`</span>uname<span style="color:#e6db74">`</span>
<span style="color:#66d9ef">if</span> <span style="color:#f92672">[[</span> <span style="color:#e6db74">&#34;</span>$unamestr<span style="color:#e6db74">&#34;</span> <span style="color:#f92672">==</span> <span style="color:#e6db74">&#39;Linux&#39;</span> <span style="color:#f92672">]]</span>; <span style="color:#66d9ef">then</span>
  echo -e <span style="color:#e6db74">&#34;Linux SSH: Copying to Clipboard.&#34;</span>
  cat | nc -q0 localhost <span style="color:#ae81ff">2224</span>
<span style="color:#66d9ef">elif</span> <span style="color:#f92672">[[</span> <span style="color:#e6db74">&#34;</span>$unamestr<span style="color:#e6db74">&#34;</span> <span style="color:#f92672">==</span> <span style="color:#e6db74">&#39;FreeBSD&#39;</span> <span style="color:#f92672">]]</span>; <span style="color:#66d9ef">then</span>
  <span style="color:#f92672">[</span> -n <span style="color:#e6db74">&#34;</span>$SSH_CLIENT<span style="color:#e6db74">&#34;</span> <span style="color:#f92672">]</span> &amp;amp;&amp;amp; SESSION_TYPE<span style="color:#f92672">=</span><span style="color:#e6db74">&#34;remote&#34;</span>
  <span style="color:#66d9ef">if</span> <span style="color:#f92672">[[</span> $SESSION_TYPE <span style="color:#f92672">==</span> <span style="color:#e6db74">&#34;remote&#34;</span> <span style="color:#f92672">]]</span>; <span style="color:#66d9ef">then</span>
    echo -e <span style="color:#e6db74">&#34;OS X SSH: Copying to Clipboard.&#34;</span>
    cat | nc -c localhost <span style="color:#ae81ff">2224</span>
  <span style="color:#66d9ef">else</span>
    echo -e <span style="color:#e6db74">&#34;OS X Local: Copying to Clipboard.&#34;</span>
    cat | pbcopy
  <span style="color:#66d9ef">fi</span>
<span style="color:#66d9ef">fi</span>
</code></pre></div><p>Make it executable (chmod a+x /usr/local/bin/rpbcopy). Then, in your remote ~/.bash_profile, add the line:</p>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-bash" data-lang="bash">alias pbcopy<span style="color:#f92672">=</span><span style="color:#e6db74">&#34;/usr/local/bin/rpbcopy&#34;</span>
</code></pre></div><p>That will create the pbcopy on Linux/Unix or replace the default pbcopy command on OS X with the script above, which checks whether you’re in an SSH session and runs nc or the original pbcopy accordingly.</p>
<p>Instead of the if statement in the shell script, you could also check for the SSH session (using the same check for $SSH_CLIENT) in your .bash_profile and only alias pbcopy if you’re logged in remotely. Your choice.</p>
<p>Now, when you’re logged in on the remote Linux/OS X system over SSH, you can type cat filename|pbcopy or pipe the output of a command to pbcopy and it will show up on your local clipboard. It’s the same result you’d expect if you were just working in Terminal locally, so it requires no change of habits. Handy stuff.</p>
]]></content></item><item><title>Make Sudo Sessions Last Longer in Linux</title><link>https://medoix.com/posts/2013/08/make-sudo-sessions-last-longer-in-linux/</link><pubDate>Fri, 30 Aug 2013 08:52:16 +0000</pubDate><guid>https://medoix.com/posts/2013/08/make-sudo-sessions-last-longer-in-linux/</guid><description>When you run sudo in Ubuntu, your administrative privileges last for 15 minutes by default so you don&amp;rsquo;t have to type in your password with every command. If that is too long or short for your tastes, you can change it with a simple tweak.
Run the following command in a Terminal:
sudo visudo Scroll down to the line that looks like this:
Defaults env_reset and change it to this:</description><content type="html"><![CDATA[<p><img src="original11.jpg" alt="Linux Sudo Extention Example" title="Sudo Extention Commands"></p>
<p>When you run <strong>sudo</strong> in Ubuntu, your administrative privileges last for 15 minutes by default so you don&rsquo;t have to type in your password with every command. If that is too long or short for your tastes, you can change it with a simple tweak.</p>
<p>Run the following command in a Terminal:</p>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-bash" data-lang="bash">sudo visudo
</code></pre></div><p>Scroll down to the line that looks like this:</p>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-bash" data-lang="bash">Defaults        env_reset
</code></pre></div><p>and change it to this:</p>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-bash" data-lang="bash">Defaults        env_reset,timestamp_timeout<span style="color:#f92672">=</span><span style="color:#ae81ff">30</span>
</code></pre></div><p>Change <strong>30</strong> to the time, in minutes, that you want it to wait before it times out. You can also change it to <strong>0</strong> if you want a password prompt every time you run <strong>sudo</strong>, or <strong>-1</strong> if you never want a password prompt (though we don&rsquo;t recommend this).</p>
<p>Press Ctrl+X to finish editing, Y to save changes, and Enter to exit if you&rsquo;re on Ubuntu. Other Linux distros may have different commands depending on the default editor.</p>
]]></content></item><item><title>Make Password Asterisks Visible in your Mac or Linux Terminal</title><link>https://medoix.com/posts/2013/08/make-password-asterisks-visible-in-your-mac-or-linux-terminal/</link><pubDate>Fri, 30 Aug 2013 08:41:53 +0000</pubDate><guid>https://medoix.com/posts/2013/08/make-password-asterisks-visible-in-your-mac-or-linux-terminal/</guid><description>When you run a command with sudo in Linux, the terminal prompts you to type in your password and doesn&amp;rsquo;t give you any visual feedback. Here&amp;rsquo;s a quick tweak that&amp;rsquo;ll bring back those familiar asterisks (*) when you type in your password.
I&amp;rsquo;m a fast typer, so when I mess up my password, I have to start over from scratch. With asterisks, it&amp;rsquo;s a lot easier—and seeing as no one&amp;rsquo;s looking over my shoulder in my home office, it doesn&amp;rsquo;t matter how obscured my password is.</description><content type="html"><![CDATA[<p><img src="original.jpg" alt="Linux Show Password Example" title="Default Password View"></p>
<p>When you run a command with <strong>sudo</strong> in Linux, the terminal prompts you to type in your password and doesn&rsquo;t give you any visual feedback. Here&rsquo;s a quick tweak that&rsquo;ll bring back those familiar asterisks (*) when you type in your password.</p>
<p>I&rsquo;m a fast typer, so when I mess up my password, I have to start over from scratch. With asterisks, it&rsquo;s a lot easier—and seeing as no one&rsquo;s looking over my shoulder in my home office, it doesn&rsquo;t matter how obscured my password is.</p>
<p>To bring back those asterisks run the following command in a Terminal:</p>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-bash" data-lang="bash">sudo visudo
</code></pre></div><p>Scroll down to the line that looks like this:</p>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-bash" data-lang="bash">Defaults        env_reset
</code></pre></div><p>and change it to this:</p>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-bash" data-lang="bash">Defaults        env_reset,pwfeedback
</code></pre></div><p>Press Ctrl+X to finish editing, Y to save changes, and Enter to exit if you&rsquo;re on Ubuntu. Other Linux distros may have different commands depending on the default editor. Mac users, for example, use vi, and will have to type <strong>:wq!</strong> and press Enter to exit.</p>
<p>Now, when you run a command with sudo, you should get visual feedback when you type in your password. This should work in all versions of Ubuntu after version 10.04, as well as many other versions of Linux. We also tested it on a Mac running OS X 10.9 Mavericks. Check out the link below for more ways to tweak how sudo works.</p>
]]></content></item><item><title>Permanent Delete on OSX (Windows Shift + Delete Alternative)</title><link>https://medoix.com/posts/2013/07/permanent-delete-on-osx-windows-shift-delete-alternative/</link><pubDate>Tue, 16 Jul 2013 09:54:40 +0000</pubDate><guid>https://medoix.com/posts/2013/07/permanent-delete-on-osx-windows-shift-delete-alternative/</guid><description>Create an Automator service or application to facilitate executing the rm shell command, which will permanently delete files or folders and skip the trash.
For example, start with creating a new Service in Automator.app.
Select files or folders as input, you probably also want to limit the availability of this service to the Finder app. Optionally, but highly recommended, first add an Ask for Confirmation step to the workflow.</description><content type="html"><![CDATA[<p>Create an Automator service or application to facilitate executing the <code>rm</code> shell command, which will permanently delete files or folders and skip the trash.</p>
<p>For example, start with creating a new Service in <strong>Automator.app</strong>.</p>
<ul>
<li>Select <code>files or folders</code> as input, you probably also want to limit the availability of this service to the Finder app.</li>
</ul>
<p><img src="fYhEV1.png" alt="Automator service input"></p>
<ul>
<li>Optionally, but highly recommended, first add an <code>Ask for Confirmation</code> step to the workflow.</li>
</ul>
<p><img src="RQ6Kk1.png" alt="Confirmation step"></p>
<ul>
<li>Finally, add the <code>Run Shell Script</code> step to the workflow. Make sure to pass input <code>as arguments</code>. Then you can put in the following script:</li>
</ul>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-bash" data-lang="bash"><span style="color:#66d9ef">for</span> f in <span style="color:#e6db74">&#34;</span>$@<span style="color:#e6db74">&#34;</span>
<span style="color:#66d9ef">do</span>
    rm -rf <span style="color:#e6db74">&#34;</span>$f<span style="color:#e6db74">&#34;</span>
<span style="color:#66d9ef">done</span>
</code></pre></div><p><img src="jX6JP1.png" alt="Input shell script"></p>
<p>You can also add a <code>-P</code> parameter to <code>rm</code> for additional security while deleting. For an extra nicety, you can add some audible feedback by adding the following command at the end of the shell script:</p>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-bash" data-lang="bash">afplay <span style="color:#e6db74">&#34;/System/Library/Components/CoreAudio.component/Contents/SharedSupport/SystemSounds/finder/empty trash.aif&#34;</span>
</code></pre></div><p>Save your service, and it should be ready to use in Finder from the Services menu in the menu bar. You can also configure a keyboard shortcut to your service in the Keyboard preference pane of System Preferences.</p>
<p><img src="P76SF1.png" alt="Services menu"></p>
<p><img src="AmTn61.png" alt="Service in action"></p>
<p>Instead of creating a service, you could similarly create an application in Automator, which you can pin in the Dock so you can drag files to it.</p>
]]></content></item><item><title>Remove Old Kernels in Ubuntu</title><link>https://medoix.com/posts/2012/11/remove-old-kernels-in-ubuntu/</link><pubDate>Mon, 05 Nov 2012 15:33:34 +0000</pubDate><guid>https://medoix.com/posts/2012/11/remove-old-kernels-in-ubuntu/</guid><description>To get started, open Terminal. When it opens, run the commands below to view your current running kernel.
uname -r Next, take notes of your current kernel. DO NOT REMOVE THIS!
Next, type the command below to view / list all installed kernels on your system.
dpkg --list | grep linux-image Next, find all the kernels that which number are lower than your current kernel. When you know which kernel to remove, continue below to remove it.</description><content type="html"><![CDATA[<p>To get started, open Terminal. When it opens, run the commands below to view your current running kernel.</p>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-bash" data-lang="bash">uname -r
</code></pre></div><p><img src="Yd1k8tebSA1.png" alt="Step 1" title="Step 1"></p>
<p>Next, take notes of your current kernel. <strong>DO NOT REMOVE THIS!</strong></p>
<p><img src="hkHg33NuHR1.png" alt="Step 2" title="Step 2"></p>
<p>Next, type the command below to view / list all installed kernels on your system.</p>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-bash" data-lang="bash">dpkg --list | grep linux-image
</code></pre></div><p><img src="DSgaRhehgD1.png" alt="Step 3" title="Step 3"></p>
<p>Next, find all the kernels that which number are lower than your current kernel. When you know which kernel to remove, continue below to remove it.</p>
<p><img src="zuyz-IjeiN1.png" alt="Step 4" title="Step 4"></p>
<p>Finally, run the commands below to remove the kernel you selected.</p>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-bash" data-lang="bash">sudo apt-get purge linux-image-x.x.x.x-generic
</code></pre></div><p><img src="pDMnq919zd1.jpg" alt="Step 5" title="Step 5"></p>
<p>When you’re done, run the commands below to update grub2</p>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-bash" data-lang="bash">sudo update-grub2
</code></pre></div><p><img src="qdBjAMhyDX1.png" alt="Step 6" title="Step 6"></p>
<p>That’s all.</p>
]]></content></item><item><title>Stop OS X Terminal SSH Timeout</title><link>https://medoix.com/posts/2012/02/stop-os-x-terminal-ssh-timeout/</link><pubDate>Fri, 24 Feb 2012 07:57:54 +0000</pubDate><guid>https://medoix.com/posts/2012/02/stop-os-x-terminal-ssh-timeout/</guid><description>There are three ways to do this using the ServerAliveInterval to send data along every few seconds. Replace the &amp;ldquo;10&amp;rdquo; with the number of seconds between pings.
From least to most global:
1. Add the option on the command line:
ssh -o ServerAliveInterval=10 keepsdroppingme.com 2. Add the option to your personal ssh config by creating/editing ~/.ssh/config:
# This is ~/.ssh/config # For all hosts ServerAliveInterval 10 # For a selection of hosts Host keepsdroppingme.</description><content type="html"><![CDATA[<p>There are three ways to do this using the ServerAliveInterval to send data along every few seconds. Replace the &ldquo;10&rdquo; with the number of seconds between pings.</p>
<p>From least to most global:</p>
<p>1. Add the option on the command line:</p>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-bash" data-lang="bash">ssh -o ServerAliveInterval<span style="color:#f92672">=</span><span style="color:#ae81ff">10</span> keepsdroppingme.com
</code></pre></div><p>2. Add the option to your personal ssh config by creating/editing ~/.ssh/config:</p>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-bash" data-lang="bash"><span style="color:#75715e"># This is ~/.ssh/config</span>
<span style="color:#75715e"># For all hosts</span>
ServerAliveInterval <span style="color:#ae81ff">10</span>
<span style="color:#75715e"># For a selection of hosts</span>
Host keepsdroppingme.com alsokeepsdroppingme.com
  ServerAliveInterval <span style="color:#ae81ff">10</span>
</code></pre></div><p>3. Add the option to the system-wide ssh config by editing /etc/ssh_config. (Syntax the same as above.)</p>
]]></content></item><item><title>Change MySQL Database Location</title><link>https://medoix.com/posts/2012/02/change-mysql-database-location/</link><pubDate>Sun, 19 Feb 2012 06:49:32 +0000</pubDate><guid>https://medoix.com/posts/2012/02/change-mysql-database-location/</guid><description>So considering that i am using a 8GB USB Stick as my OS HDD it tends to get full easily and i need to clean stuff up or move things around. This happened recently with my fairly large databases. Also because of read/write cycles are high i couldn&amp;rsquo;t imagine this would be good for my flash drive HDD and therefore decided to move it!
Stop MySQL
/etc/init.d/mysql stop Move existing data directory (which is located in /var/lib/mysql) to new dir /usr/new_datadir</description><content type="html"><![CDATA[<p>So considering that i am using a 8GB USB Stick as my OS HDD it tends to get full easily and i need to clean stuff up or move things around. This happened recently with my fairly large databases.
Also because of read/write cycles are high i couldn&rsquo;t imagine this would be good for my flash drive HDD and therefore decided to move it!</p>
<p>Stop MySQL</p>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-bash" data-lang="bash">/etc/init.d/mysql stop
</code></pre></div><p>Move existing data directory (which is located in <em>/var/lib/mysql</em>) to new dir <em>/usr/new_datadir</em></p>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-bash" data-lang="bash">mv /var/lib/mysql /usr/new_datadir
</code></pre></div><p>Create symlink from new dir to old one</p>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-bash" data-lang="bash">ln -s /usr/new_datadir /var/lib/mysql
</code></pre></div><p>Don&rsquo;t change <em>/etc/mysql/my.cnf</em></p>
<p>Ubuntu uses some security software called <strong>AppArmor</strong> that specifies the areas of your filesystem applications that are allowed to access. Unless you modify the AppArmor profile for MySQL, you&rsquo;ll never be able to restart MySQL with the new datadir location.</p>
<p>In the terminal, enter the command</p>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-bash" data-lang="bash">vim /etc/apparmor.d/usr.sbin.mysqld
</code></pre></div><p>Duplicate the lines beginning with <em>/var/lib/mysql</em> and replace duplicated strings with <em>/usr/new_datadir</em></p>
<p>In my case it was:</p>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-bash" data-lang="bash">/var/lib/mysql/ r,
/var/lib/mysql/** rwk,
<span style="color:#75715e">#</span>
/usr/new_datadir r,
/usr/new_datadir** rwk,
</code></pre></div><p>Restart the AppArmor profiles</p>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-bash" data-lang="bash">/etc/init.d/apparmor restart
</code></pre></div><p>Restart MySQL</p>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-bash" data-lang="bash">/etc/init.d/mysql restart
</code></pre></div><p>MySQL should now start without any errors, have fun!</p>
]]></content></item><item><title>Get External (WAN) IP Address from Command Line in Linux</title><link>https://medoix.com/posts/2012/02/get-external-wan-ip-address-from-command-line-in-linux/</link><pubDate>Fri, 03 Feb 2012 18:14:56 +0000</pubDate><guid>https://medoix.com/posts/2012/02/get-external-wan-ip-address-from-command-line-in-linux/</guid><description>Many services and applications require you to know your external (WAN) IP address. There are plenty of web sites that allow you to do this, but here are a couple of simple ways to do this from the command line in Linux.
The first method uses the cURL utility, which is basically a command-line utility for retrieving data using URL syntax. In Ubuntu or Debian, you can install cURL from the repositories using the command:</description><content type="html"><![CDATA[<p>Many services and applications require you to know your external (WAN) IP address. There are plenty of web sites that allow you to do this, but here are a couple of simple ways to do this from the command line in Linux.</p>
<p>The first method uses the <a href="http://curl.haxx.se/" title="cURL">cURL</a> utility, which is basically a command-line utility for retrieving data using URL syntax. In Ubuntu or Debian, you can install cURL from the repositories using the command:</p>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-bash" data-lang="bash">sudo apt-get install curl
</code></pre></div><p>After installing cURL, just run this command to get your external IP address:</p>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-bash" data-lang="bash">curl ifconfig.me/ip
</code></pre></div><p>You can replace ifconfig.me with other service hostnames/URLs, such as:
whatismyip.org
icanhazip.com
tnx.nl/ip
myip.dnsomatic.com
ip.appspot.com
checkip.dyndns.org:8245
whatismyip.com
jsonip.com</p>
<p>The second method is really a variation on the one above and uses the wget command. You can use the same hostnames/URLs as above with this command:</p>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-bash" data-lang="bash">wget -qO- ifconfig.me/ip
</code></pre></div><p>Have fun! And let me know your tips for this in the comments.</p>
]]></content></item><item><title>Tor Hidden Service on Ubuntu</title><link>https://medoix.com/posts/2012/01/tor-hidden-service-on-ubuntu/</link><pubDate>Sat, 28 Jan 2012 20:45:23 +0000</pubDate><guid>https://medoix.com/posts/2012/01/tor-hidden-service-on-ubuntu/</guid><description>NOTE: This article does not explain how to setup apache or any other services apart from the tor application for hidden_service.
I have recently been migrating all of my browsing, email and communications etc through the Tor Network.
One of the cool features of the onion router is the ability to setup what is referred to as a hidden service. This is just what it sounds like, a domain (16characters.onion) randomly generated and completely anonymous through the Tor network can be configured to point to a local service port.</description><content type="html"><![CDATA[<p><strong>NOTE:</strong> This article does not explain how to setup apache or any other services apart from the tor application for hidden_service.</p>
<p>I have recently been migrating all of my browsing, email and communications etc through the <a href="http://torproject.org" title="Tor Project">Tor Network</a>.</p>
<p>One of the cool features of the onion router is the ability to setup what is referred to as a hidden service. This is just what it sounds like, a domain (16characters.onion) randomly generated and completely anonymous through the Tor network can be configured to point to a local service port. (Apache, SSH, SMTP etc)</p>
<p>To do this on my Ubuntu server all i had to do was the following&hellip;</p>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-bash" data-lang="bash">sudo apt-get update
sudo apt-get install tor
</code></pre></div><p>Now that tor is installed we can create the hidden_service folder.</p>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-bash" data-lang="bash">sudo mkdir /var/lib/tor/hidden_service
sudo chown debian-tor:debian-tor /var/lib/tor/hidden_service
</code></pre></div><p>This folder is where the private_key and hostname files will be created and stored.</p>
<p>We now want to add our hidden_service to our torrc file (tor config file).</p>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-bash" data-lang="bash">sudo nano /etc/tor/torrc
</code></pre></div><p>And un-comment the following lines (remove the # from the start of each line)</p>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-bash" data-lang="bash">HiddenServiceDir /var/lib/tor/hidden_service/
HiddenServicePort <span style="color:#ae81ff">80</span> 127.0.0.1:80
</code></pre></div><p>The above two lines tell tor where to store the files as mentioned above and also what service you want to map to. In my case port 80 (Apache Web Server) and it is running on the local server (127.0.0.1)</p>
<p>CTRL+X to quit nano and hit Y to save the file.</p>
<p>Now we want to reboot the tor service so it can pick up the new settings and generate our hostname.</p>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-bash" data-lang="bash">sudo /etc/init.d/tor restart
</code></pre></div><p>Tor will restart and the private_key and hostname files will be generated in the folder as above. You can now open your hostname file to retrieve your 16character.onion domain name and put it to good use.</p>
]]></content></item><item><title>Backup Bitcoin Wallet to Dropbox</title><link>https://medoix.com/posts/2012/01/backup-bitcoin-wallet-to-dropbox/</link><pubDate>Sat, 28 Jan 2012 07:20:54 +0000</pubDate><guid>https://medoix.com/posts/2012/01/backup-bitcoin-wallet-to-dropbox/</guid><description>So i have my Bitcoin application running and as the latest version now supports wallet encryption i have this turned on with a long password.
I was looking for a way to backup my wallet in case i need to format my machine or things go south.
First quit the Bitcoin application and then move the wallet.dat file from the Bitcoin folder located at &amp;ldquo;~/Library/Application Support/Bitcoin&amp;rdquo; and put it in your Dropbox folder as below.</description><content type="html"><![CDATA[<p>So i have my Bitcoin application running and as the latest version now supports wallet encryption i have this turned on with a long password.</p>
<p>I was looking for a way to backup my wallet in case i need to format my machine or things go south.</p>
<p>First quit the Bitcoin application and then move the wallet.dat file from the Bitcoin folder located at &ldquo;~/Library/Application Support/Bitcoin&rdquo; and put it in your Dropbox folder as below.</p>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-bash" data-lang="bash">mkdir -p ~/Dropbox/Bitcoin
mv ~/Library/Application Support/Bitcoin/wallet.dat ~/Dropbox/Bitcoin
</code></pre></div><p>Secondly i now needed to create a link from the location that the Bitcoin application looks at to where the wallet file now resides.</p>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-bash" data-lang="bash">ln -s ~/Dropbox/Bitcoin/wallet.dat ~/Library/Application Support/Bitcoin/wallet.dat
</code></pre></div><p>Now start the Bitcoin application and your address&rsquo;s should all be there and correct.</p>
]]></content></item><item><title>Disable Translation Packages in Ubuntu</title><link>https://medoix.com/posts/2012/01/disable-translation-packages-in-ubuntu/</link><pubDate>Sun, 22 Jan 2012 07:40:59 +0000</pubDate><guid>https://medoix.com/posts/2012/01/disable-translation-packages-in-ubuntu/</guid><description>To disable downloading translations, create a file named /etc/apt/apt.conf.d/99translations &amp;amp; put the following in it:
Acquire::Languages &amp;#34;none&amp;#34;; You may also need to remove existing translation files in /var/lib/apt/lists/ I personally just empty the lists folder and do an apt-get update</description><content type="html"><![CDATA[<p>To disable downloading translations, create a file named /etc/apt/apt.conf.d/99translations &amp; put the following in it:</p>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-bash" data-lang="bash">Acquire::Languages <span style="color:#e6db74">&#34;none&#34;</span>;
</code></pre></div><p>You may also need to remove existing translation files in /var/lib/apt/lists/
I personally just empty the lists folder and do an apt-get update</p>
]]></content></item><item><title>Mac OSX Lion – Remove “all my files” from Finder</title><link>https://medoix.com/posts/2012/01/mac-osx-lion-remove-all-my-files-from-finder/</link><pubDate>Wed, 18 Jan 2012 11:01:23 +0000</pubDate><guid>https://medoix.com/posts/2012/01/mac-osx-lion-remove-all-my-files-from-finder/</guid><description>Finder on Mac OS X Lion by default is always showing “All My Files” on every new window. Well to be honest not even once I found it useful, never used it since the first install.
Even if you are a geeky Terminal fan, there are always times that you start up Finder, and you need to get faster to your important files. Most of the times I am looking for something in the Documents folder/subfolders, so here is how I have set it as the default Finder directory:</description><content type="html"><![CDATA[<p>Finder on Mac OS X Lion by default is always showing “All My Files” on every new window. Well to be honest not even once I found it useful, never used it since the first install.</p>
<p>Even if you are a geeky Terminal fan, there are always times that you start up Finder, and you need to get faster to your important files. Most of the times I am looking for something in the Documents folder/subfolders, so here is how I have set it as the default Finder directory:</p>
<p>Go to Finder, main menu -&gt; Finder -&gt; Preferences… -&gt; General -&gt; and select your favourite folder in “New Finder windows show” option as shown in the screenshot below.</p>
<p><img src="finder-lion.jpg" alt="Set Default Finder Open" title="OS X Lion Finder"></p>
<p>You can also remove “All My Files” from the Finder’s sidebar as well, just right-click and remove it, or uncheck it from Preferences -&gt; Sidebar.</p>
]]></content></item><item><title>Pop-Up Notifications to iTunes</title><link>https://medoix.com/posts/2011/11/pop-up-notifications-to-itunes/</link><pubDate>Thu, 24 Nov 2011 09:59:56 +0000</pubDate><guid>https://medoix.com/posts/2011/11/pop-up-notifications-to-itunes/</guid><description>Mac: Usually, if you want to find out what’s playing in iTunes, you either need to right-click the icon or open it.
Macworld found a method that only requires a little work in Terminal to enable a small pop-up on your dock showing the currently-playing track.The process is simple, but only works in OS X Lion.
First, boot up Terminal in your Utilities folder on a Mac, then, type:
defaults write com.</description><content type="html"><![CDATA[<p>Mac: Usually, if you want to find out what’s playing in iTunes, you either need to right-click the icon or open it.</p>
<p>Macworld found a method that only requires a little work in Terminal to enable a small pop-up on your dock showing the currently-playing track.The process is simple, but only works in OS X Lion.</p>
<p>First, boot up Terminal in your Utilities folder on a Mac, then, type:</p>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-bash" data-lang="bash">defaults write com.apple.dock itunes-notifications -bool TRUE;killall Dock
</code></pre></div><p>Now, when you’re playing a track a small pop-up will show in your dock for a few seconds with information on the currently-playing track. If you decide you don’t like it, disabling it is simple. Back in Terminal, type:</p>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-bash" data-lang="bash">defaults delete com.apple.dock itunes-notifications
</code></pre></div><p>For ways to customise the pop-up, hit up the post linked below.</p>
]]></content></item><item><title>Enable VNC/Management on OSX by SSH</title><link>https://medoix.com/posts/2011/11/enable-vnc/management-on-osx-by-ssh/</link><pubDate>Thu, 24 Nov 2011 09:56:32 +0000</pubDate><guid>https://medoix.com/posts/2011/11/enable-vnc/management-on-osx-by-ssh/</guid><description>I had the VNC based remote access feature of OS X enabled on 10.7 but somehow it got switched off. I fiddled around a bit and figured out how to enable remote access from a remote SSH shell. Note that these instructions will lead to manual configuration and you will not be able to enable/disabled the services from the System Preferences anymore. In my case I used this to get in when I needed to but latter switched it back off and used the System Preferences setting.</description><content type="html"><![CDATA[<p>I had the VNC based remote access feature of OS X enabled on 10.7 but somehow it got switched off. I fiddled around a bit and figured out how to enable remote access from a remote SSH shell. Note that these instructions will lead to manual configuration and you will not be able to enable/disabled the services from the System Preferences anymore.  In my case I used this to get in when I needed to but latter switched it back off and used the System Preferences setting.</p>
<p>To manual switch on remote access from the terminal:</p>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-bash" data-lang="bash">ssh username@mac_ip_address
cd /System/Library/CoreServices/RemoteManagement/ARDAgent.app/Contents/Resources
sudo ./kickstart -activate -configure -access -on -privs -all -restart -agent
</code></pre></div><p>To switch this override back off and thus allow the System Preferences to manage screen sharing again run the following. (This will disconnect any active sessions and require physical access to re-enable it.)</p>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-bash" data-lang="bash">sudo ./kickstart -activate -restart -agent
</code></pre></div>]]></content></item><item><title>Change DeployStudio Wallpaper</title><link>https://medoix.com/posts/2011/09/change-deploystudio-wallpaper/</link><pubDate>Fri, 02 Sep 2011 09:40:53 +0000</pubDate><guid>https://medoix.com/posts/2011/09/change-deploystudio-wallpaper/</guid><description>I have been doing quite a bit of Mac OS X Image work lately and have found DeployStudio to be THE best FREE and easy to customise solution for doing this.
One thing i wanted to do was change the default wallpaper for the DeployStudioRuntime.nbi that is created and used as a windows Pre Environment equivalent.
I achieved this by going into the DeployStudioRuntime.nbi folder located on the server at:</description><content type="html"><![CDATA[<p>I have been doing quite a bit of Mac OS X Image work lately and have found DeployStudio to be THE best FREE and easy to customise solution for doing this.</p>
<p>One thing i wanted to do was change the default wallpaper for the DeployStudioRuntime.nbi that is created and used as a windows Pre Environment equivalent.</p>
<p>I achieved this by going into the DeployStudioRuntime.nbi folder located on the server at:</p>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-bash" data-lang="bash">/Library/NetBoot/NetBootSP0
</code></pre></div><p>I then mounted the &lsquo;DeployStudioRuntime.sparseimage&rsquo; file and then navigated to the bellow folder inside the image and replaced the file &lsquo;DefaultDesktop.jpg&rsquo; with my custom wallpaper.</p>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-bash" data-lang="bash">/System/Library/CoreServices
</code></pre></div><p>I made sure the image i created was a high res image to make it look nicer.</p>
]]></content></item><item><title>Prevent .DS_Store File Creation on Network Volumes</title><link>https://medoix.com/posts/2011/08/prevent-.ds_store-file-creation-on-network-volumes/</link><pubDate>Sat, 13 Aug 2011 07:25:18 +0000</pubDate><guid>https://medoix.com/posts/2011/08/prevent-.ds_store-file-creation-on-network-volumes/</guid><description>This KnowledgeBase article explains how to prevent OS X from creating new .DS_Store files when opening folders on remote volumes mounted using SMB/CIFS, AFP, NFS, and WebDAV. The creation of .DS_Store files (and more so, ._AppleDouble files which are not covered in this hint) is frequently the source of complaints against Mac users, who often leave a trail of these files scattered throughout the filesystem when &amp;ldquo;visiting&amp;rdquo; a Windows computer. Even with this hint in place, the .</description><content type="html"><![CDATA[<p><a href="http://docs.info.apple.com/article.html?artnum=301711">This KnowledgeBase article</a> explains how to prevent OS X from creating new <strong>.DS_Store</strong> files when opening folders on remote volumes mounted using SMB/CIFS, AFP, NFS, and WebDAV. The creation of <strong>.DS_Store</strong> files (and more so, <strong>._AppleDouble</strong> files which are not covered in this hint) is frequently the source of complaints against Mac users, who often leave a trail of these files scattered throughout the filesystem when &ldquo;visiting&rdquo; a Windows computer. Even with this hint in place, the .DS_Store files will continue to be created on local volumes (which is a good thing).</p>
<p>To prevent the creation of these files, open the Terminal and type:</p>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-bash" data-lang="bash">defaults write com.apple.desktopservices DSDontWriteNetworkStores true
</code></pre></div><p>It may be necessary to log out and back in, or even to restart the computer (which is what the article states), for the change to take effect.</p>
<p><strong>Note:</strong> Most of the settings controlled by data in .DS_Store files are &ldquo;cosmetic&rdquo; in nature &ndash; for example, Finder window position, view style, icon position, etc. However, .DS_Store files in OS X also store Finder &ldquo;comments&rdquo; so in this sense, disabling .DS_Store files may result in loss of data.</p>
]]></content></item><item><title>Code Syntax Highlighting in VI (Linux Editor)</title><link>https://medoix.com/posts/2011/08/code-syntax-highlighting-in-vi-linux-editor/</link><pubDate>Fri, 12 Aug 2011 13:53:05 +0000</pubDate><guid>https://medoix.com/posts/2011/08/code-syntax-highlighting-in-vi-linux-editor/</guid><description>I recently wrote about how to enable syntax highlighting in the linux editor NANO.
Below i will explain how to enable such features in VI, as they are built in it is much easier.
Move to your home directory and create/open the settings file:
cd vi .vimrc Enable syntax highlighting:
syntax on Save using:
:wq! You will now have syntax highlighting enabled when using vi/vim as your editor of choice.</description><content type="html"><![CDATA[<p>I recently wrote about how to <a href="http://medoix.com/2011/08/08/code-syntax-highlighting-in-nano-linux-editor">enable syntax highlighting in the linux editor NANO</a>.</p>
<p>Below i will explain how to enable such features in VI, as they are built in it is much easier.</p>
<p><strong>Move to your home directory and create/open the settings file:</strong></p>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-bash" data-lang="bash">cd
vi .vimrc
</code></pre></div><p><strong>Enable syntax highlighting:</strong></p>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-bash" data-lang="bash">syntax on
</code></pre></div><p><strong>Save using:</strong></p>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-bash" data-lang="bash">:wq!
</code></pre></div><p>You will now have syntax highlighting enabled when using vi/vim as your editor of choice.</p>
]]></content></item><item><title>Clear or Flush ARP/DNS Cache in OSX</title><link>https://medoix.com/posts/2011/08/clear-or-flush-arp/dns-cache-in-osx/</link><pubDate>Thu, 11 Aug 2011 10:57:13 +0000</pubDate><guid>https://medoix.com/posts/2011/08/clear-or-flush-arp/dns-cache-in-osx/</guid><description>To clear the address resolution protocol cache, simply enter the following command in the terminal.
sudo arp -a -d To clear the domain name system cache, simply enter the following command in the terminal.
dscacheutil -flushcache</description><content type="html"><![CDATA[<p>To clear the address resolution protocol cache, simply enter the following command in the terminal.</p>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-bash" data-lang="bash">sudo arp -a -d
</code></pre></div><p>To clear the domain name system cache, simply enter the following command in the terminal.</p>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-bash" data-lang="bash">dscacheutil -flushcache
</code></pre></div>]]></content></item><item><title>Delete a Boot Camp Partition</title><link>https://medoix.com/posts/2011/08/delete-a-boot-camp-partition/</link><pubDate>Wed, 10 Aug 2011 11:56:18 +0000</pubDate><guid>https://medoix.com/posts/2011/08/delete-a-boot-camp-partition/</guid><description>If you’ve installed Windows via Boot Camp, and now want to delete it and restore the space to your main Mac hard drive, this brief tutorial will guide you through the steps to do just that.
It’s actually quite easy to remove the Windows drive and reclaim all the hard drive space, the only “problem” is that Apple doesn’t make it an obvious process.
NOTE: by deleting your Windows Boot Camp partition, you will of course be deleting all of the data on that partition.</description><content type="html"><![CDATA[<p>If you’ve installed Windows via Boot Camp, and now want to delete it and restore the space to your main Mac hard drive, this brief tutorial will guide you through the steps to do just that.</p>
<p>It’s actually quite easy to remove the Windows drive and reclaim all the hard drive space, the only “problem” is that Apple doesn’t make it an obvious process.</p>
<p><strong>NOTE:</strong> by deleting your Windows Boot Camp partition, you will of course be deleting all of the data on that partition. Make sure to back up anything on your “Windows drive” before you proceed. Your OS X partition will not be erased and you won’t lose any data from it.</p>
<p><img src="delbootcamp00a.png" alt=""></p>
<p><img src="delbootcamp03a.png" alt=""></p>
<p><img src="delbootcamp06a.png" alt=""></p>
]]></content></item><item><title>Code Syntax Highlighting in Nano (Linux Editor)</title><link>https://medoix.com/posts/2011/08/code-syntax-highlighting-in-nano-linux-editor/</link><pubDate>Mon, 08 Aug 2011 18:58:20 +0000</pubDate><guid>https://medoix.com/posts/2011/08/code-syntax-highlighting-in-nano-linux-editor/</guid><description>Today i was looking for a way to enable extended code syntax highlighting in the linux text editor nano, out of the box nano comes with limited functionality to do this. I will tell you how to download the needed files and add them to the nano configuration and you will be looking at much prettier code in no time.
Firstly we need the syntax files: DOWNLOAD HERE
Secondly we need to extract the contents and move to the correct location:</description><content type="html"><![CDATA[<p>Today i was looking for a way to enable extended code syntax highlighting in the linux text editor nano, out of the box nano comes with limited functionality to do this. I will tell you how to download the needed files and add them to the nano configuration and you will be looking at much prettier code in no time.</p>
<p><strong>Firstly we need the syntax files:</strong> <a href="nano-supplement.tar">DOWNLOAD HERE</a></p>
<p><strong>Secondly we need to extract the contents and move to the correct location:</strong></p>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-bash" data-lang="bash">tar -xvf nano-supplement.tar
sudo chown root:root *nanorc
sudo mv *nanorc /usr/share/nano
</code></pre></div><p><strong>Thirdly the nanorc file needs to be modified to reference the new syntax files we just extracted and moved:</strong>
Open the nanorc file for editing</p>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-bash" data-lang="bash">sudo nano /etc/nanorc
</code></pre></div><p>Insert below lines at end of the nanorc file</p>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-bash" data-lang="bash"><span style="color:#75715e">## Config Files (.ini)</span>
include <span style="color:#e6db74">&#34;/usr/share/nano/ini.nanorc&#34;</span>
<span style="color:#75715e">## Xorg.conf</span>
include <span style="color:#e6db74">&#34;/usr/share/nano/xorg.nanorc&#34;</span>
<span style="color:#75715e">## CSS</span>
include <span style="color:#e6db74">&#34;/usr/share/nano/css.nanorc&#34;</span>
<span style="color:#75715e">## XML</span>
include <span style="color:#e6db74">&#34;/usr/share/nano/xml.nanorc&#34;</span>
<span style="color:#75715e">## Generic .conf</span>
include <span style="color:#e6db74">&#34;/usr/share/nano/conf.nanorc&#34;</span>
<span style="color:#75715e">## PHP</span>
include <span style="color:#e6db74">&#34;/usr/share/nano/php.nanorc&#34;</span>
</code></pre></div><p>All done.</p>
<p>You should now be able to open PHP, CSS &amp; XML files for example and see the new colours.</p>
]]></content></item></channel></rss>