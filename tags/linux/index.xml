<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Linux on medoix</title><link>https://medoix.com/tags/linux/</link><description>Recent content in Linux on medoix</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><copyright>This work is licensed under a Creative Commons Attribution-NonCommercial 4.0 International License.</copyright><lastBuildDate>Sat, 17 Apr 2021 15:46:43 +0000</lastBuildDate><atom:link href="https://medoix.com/tags/linux/index.xml" rel="self" type="application/rss+xml"/><item><title>Increase Terminal Size Font of 4k Device</title><link>https://medoix.com/posts/2021/04/increase-terminal-size-font-of-4k-device/</link><pubDate>Sat, 17 Apr 2021 15:46:43 +0000</pubDate><guid>https://medoix.com/posts/2021/04/increase-terminal-size-font-of-4k-device/</guid><description>When booting a new Linux install on a 4k HiDPI screen the terminal font size becomes so small that it is near impossible to read.
In order to increase the font size i found this neat little setting that does just that, now you can read your terminal before you startx.
Edit /etc/vconsole.conf and add/replace with the following to get larger font on the next boot.
FONT=latarcyrheb-sun32</description></item><item><title>Fix Windows Subsystem for Linux (WSL) File Permissions</title><link>https://medoix.com/posts/2021/01/fix-windows-subsystem-for-linux-wsl-file-permissions/</link><pubDate>Tue, 05 Jan 2021 11:55:02 +0000</pubDate><guid>https://medoix.com/posts/2021/01/fix-windows-subsystem-for-linux-wsl-file-permissions/</guid><description>Windows 10 and WSL (windows Subsystem Linux) is very useful when wanting to run linux type tasks on your Windows 10 machine instead of booting up a dedicated Linux Virtual Machine for example. One downside is that Windows 10 WSL does a terrible job at emulating Linux permissions when it mounts the directories stored locally on the Windows filesystem.
There are two fixes we can do here to make this much nicer&amp;hellip;</description></item><item><title>Linux Desktop Showing Content of Home Directory</title><link>https://medoix.com/posts/2019/01/linux-desktop-showing-content-of-home-directory/</link><pubDate>Sat, 26 Jan 2019 08:22:24 +0000</pubDate><guid>https://medoix.com/posts/2019/01/linux-desktop-showing-content-of-home-directory/</guid><description>Ever had that awkward moment where you login to your Linux desktop and there are a LOT of files on the desktop that you are not sure about (even DOT files).
This usually means something has gone haywire with your configuration and the desktop is now set to a different folder (different than the default /home/user/Desktop folder).
This happened to me and i believe it was because i deleted my Desktop folder (don&amp;rsquo;t ask) and it seems that XDG just took it upon itself to set its new location to my home (~/) directory and therefore i was seeing dot files and all the different folders associated.</description></item><item><title>PBCopy From SSH to Local OSX</title><link>https://medoix.com/posts/2014/11/pbcopy-from-ssh-to-local-osx/</link><pubDate>Thu, 27 Nov 2014 11:43:14 +0000</pubDate><guid>https://medoix.com/posts/2014/11/pbcopy-from-ssh-to-local-osx/</guid><description>I have been wondering for a long time how i could copy large config files or any file for that matter from nano/vi inside an SSH session to my local clipboard (OSX). As you can imagine copying one section at a time from your favourite text editor has long been a pain in the rear end.
The trick uses netcat (nc) to pipe text over an SSH connection to a local listener that passes it to pbcopy.</description></item><item><title>Make Sudo Sessions Last Longer in Linux</title><link>https://medoix.com/posts/2013/08/make-sudo-sessions-last-longer-in-linux/</link><pubDate>Fri, 30 Aug 2013 08:52:16 +0000</pubDate><guid>https://medoix.com/posts/2013/08/make-sudo-sessions-last-longer-in-linux/</guid><description>When you run sudo in Ubuntu, your administrative privileges last for 15 minutes by default so you don&amp;rsquo;t have to type in your password with every command. If that is too long or short for your tastes, you can change it with a simple tweak.
Run the following command in a Terminal:
sudo visudo Scroll down to the line that looks like this:
Defaults env_reset and change it to this:</description></item><item><title>Make Password Asterisks Visible in your Mac or Linux Terminal</title><link>https://medoix.com/posts/2013/08/make-password-asterisks-visible-in-your-mac-or-linux-terminal/</link><pubDate>Fri, 30 Aug 2013 08:41:53 +0000</pubDate><guid>https://medoix.com/posts/2013/08/make-password-asterisks-visible-in-your-mac-or-linux-terminal/</guid><description>When you run a command with sudo in Linux, the terminal prompts you to type in your password and doesn&amp;rsquo;t give you any visual feedback. Here&amp;rsquo;s a quick tweak that&amp;rsquo;ll bring back those familiar asterisks (*) when you type in your password.
I&amp;rsquo;m a fast typer, so when I mess up my password, I have to start over from scratch. With asterisks, it&amp;rsquo;s a lot easier—and seeing as no one&amp;rsquo;s looking over my shoulder in my home office, it doesn&amp;rsquo;t matter how obscured my password is.</description></item><item><title>Remove Old Kernels in Ubuntu</title><link>https://medoix.com/posts/2012/11/remove-old-kernels-in-ubuntu/</link><pubDate>Mon, 05 Nov 2012 15:33:34 +0000</pubDate><guid>https://medoix.com/posts/2012/11/remove-old-kernels-in-ubuntu/</guid><description>To get started, open Terminal. When it opens, run the commands below to view your current running kernel.
uname -r Next, take notes of your current kernel. DO NOT REMOVE THIS!
Next, type the command below to view / list all installed kernels on your system.
dpkg --list | grep linux-image Next, find all the kernels that which number are lower than your current kernel. When you know which kernel to remove, continue below to remove it.</description></item><item><title>Stop OS X Terminal SSH Timeout</title><link>https://medoix.com/posts/2012/02/stop-os-x-terminal-ssh-timeout/</link><pubDate>Fri, 24 Feb 2012 07:57:54 +0000</pubDate><guid>https://medoix.com/posts/2012/02/stop-os-x-terminal-ssh-timeout/</guid><description>There are three ways to do this using the ServerAliveInterval to send data along every few seconds. Replace the &amp;ldquo;10&amp;rdquo; with the number of seconds between pings.
From least to most global:
1. Add the option on the command line:
ssh -o ServerAliveInterval=10 keepsdroppingme.com 2. Add the option to your personal ssh config by creating/editing ~/.ssh/config:
# This is ~/.ssh/config # For all hosts ServerAliveInterval 10 # For a selection of hosts Host keepsdroppingme.</description></item><item><title>Change MySQL Database Location</title><link>https://medoix.com/posts/2012/02/change-mysql-database-location/</link><pubDate>Sun, 19 Feb 2012 06:49:32 +0000</pubDate><guid>https://medoix.com/posts/2012/02/change-mysql-database-location/</guid><description>So considering that i am using a 8GB USB Stick as my OS HDD it tends to get full easily and i need to clean stuff up or move things around. This happened recently with my fairly large databases. Also because of read/write cycles are high i couldn&amp;rsquo;t imagine this would be good for my flash drive HDD and therefore decided to move it!
Stop MySQL
/etc/init.d/mysql stop Move existing data directory (which is located in /var/lib/mysql) to new dir /usr/new_datadir</description></item><item><title>Get External (WAN) IP Address from Command Line in Linux</title><link>https://medoix.com/posts/2012/02/get-external-wan-ip-address-from-command-line-in-linux/</link><pubDate>Fri, 03 Feb 2012 18:14:56 +0000</pubDate><guid>https://medoix.com/posts/2012/02/get-external-wan-ip-address-from-command-line-in-linux/</guid><description>Many services and applications require you to know your external (WAN) IP address. There are plenty of web sites that allow you to do this, but here are a couple of simple ways to do this from the command line in Linux.
The first method uses the cURL utility, which is basically a command-line utility for retrieving data using URL syntax. In Ubuntu or Debian, you can install cURL from the repositories using the command:</description></item></channel></rss>